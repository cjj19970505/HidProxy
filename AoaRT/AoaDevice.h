#pragma once
#include "pch.h"
#include "AoaDevice.g.h"
#include <winusb.h>

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
// static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::AoaRT::implementation
{
    struct AoaDevice : AoaDeviceT<AoaDevice>
    {
        AoaDevice(WINUSB_INTERFACE_HANDLE aoaInterfaceHandle, HANDLE deviceHandle, USB_ENDPOINT_DESCRIPTOR inEndpointDescriptor, USB_ENDPOINT_DESCRIPTOR outEndPointDescriptor):
            _AoaInterfaceHandle(aoaInterfaceHandle),
            _DeviceHandle(deviceHandle),
            _InEndpointDescriptor(inEndpointDescriptor),
            _OutEndpointDescriptor(outEndPointDescriptor)
        {}

        static winrt::Windows::Foundation::IAsyncOperation<winrt::AoaRT::AoaDevice> CreateAsync(winrt::AoaRT::AoaCredential aoaCredential);
        winrt::Windows::Storage::Streams::IInputStream InputStream();
        winrt::Windows::Storage::Streams::IOutputStream OutputStream();
        
        void Close();
        
        WINUSB_INTERFACE_HANDLE AoaInterfaceHandle()
        {
            return _AoaInterfaceHandle;
        }

        USB_ENDPOINT_DESCRIPTOR InEndpointDescriptor()
        {
            return _InEndpointDescriptor;
        }

        USB_ENDPOINT_DESCRIPTOR OutEndpointDescriptor()
        {
            return _OutEndpointDescriptor;
        }


    private:
        WINUSB_INTERFACE_HANDLE _AoaInterfaceHandle;
        HANDLE _DeviceHandle;
        USB_ENDPOINT_DESCRIPTOR _InEndpointDescriptor;
        USB_ENDPOINT_DESCRIPTOR _OutEndpointDescriptor;

        static winrt::Windows::Foundation::IAsyncAction StartAccessoryModeAsync(WINUSB_INTERFACE_HANDLE interfaceHandle, const winrt::AoaRT::AoaCredential& aoaCredential);
    };
}
namespace winrt::AoaRT::factory_implementation
{
    struct AoaDevice : AoaDeviceT<AoaDevice, implementation::AoaDevice>
    {
    };
}
